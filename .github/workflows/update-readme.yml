name: Update README with Starter Kits

on:
  push:
    branches:
      - main
      - dynamic-readme
    paths:
      - 'templates.json'
      - 'README.md'

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Update README with Starter Kits
        run: |
          # Create a script to update the README
          cat > update-readme.js << 'EOF'
          const fs = require('fs');
          const https = require('https');

          // Function to fetch package data from Packagist
          async function getPackageData(repo) {
            return new Promise((resolve, reject) => {
              const url = `https://packagist.org/packages/${repo}.json`;
              https.get(url, (res) => {
                let data = '';
                res.on('data', (chunk) => { data += chunk; });
                res.on('end', () => {
                  try {
                    if (res.statusCode === 200) {
                      const packageData = JSON.parse(data);
                      resolve(packageData);
                    } else {
                      // If package not found on Packagist, return null
                      resolve(null);
                    }
                  } catch (e) {
                    resolve(null);
                  }
                });
              }).on('error', (e) => {
                console.error(`Error fetching data for ${repo}: ${e.message}`);
                resolve(null); // Resolve with null on error to continue processing
              });
            });
          }

          // Function to format install count with commas
          function formatNumber(num) {
            return num ? num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') : '0';
          }

          // Main function to update README
          async function updateReadme() {
            // Read templates.json
            const templates = JSON.parse(fs.readFileSync('templates.json', 'utf8'));
            
            // Read README_template.md as the template
            let readme = fs.readFileSync('README_template.md', 'utf8');
            
            // Generate official starter kits list
            let officialList = '';
            for (const [name, repo] of Object.entries(templates.official)) {
              const packageData = await getPackageData(repo);
              const installs = packageData ? packageData.package.downloads.total : 0;
              officialList += `- [${name}](https://github.com/${repo}) - \`${repo}\` - ðŸ’¿ ${formatNumber(installs)} installs\n`;
            }
            
            // Generate community starter kits list
            let communityList = '';
            for (const [name, repo] of Object.entries(templates.community)) {
              const packageData = await getPackageData(repo);
              const installs = packageData ? packageData.package.downloads.total : 0;
              communityList += `- [${name}](https://github.com/${repo}) - \`${repo}\` - ðŸ’¾ ${formatNumber(installs)} installs\n`;
            }
            
            // Replace placeholders in README
            console.log('Looking for placeholders in README_template...');
            console.log('README_template before replacement:', readme);
            
            // Use regex with global flag to ensure all occurrences are replaced
            readme = readme.replace(/\[OFFICIAL\]/g, officialList.trim());
            readme = readme.replace(/\[COMMUNITY\]/g, communityList.trim());
            
            console.log('Generated README content (excerpt):', readme.substring(0, 500) + '...');
            console.log('Official list generated:', officialList);
            console.log('Community list generated:', communityList);
            
            // Write updated README
            fs.writeFileSync('README.md', readme);
            
            console.log('README.md has been updated with starter kits from templates.json');
          }

          // Run the update
          updateReadme().catch(err => {
            console.error('Error updating README:', err);
            process.exit(1);
          });
          EOF
          
          # Run the script
          node update-readme.js

      - name: Commit and push if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Always add README.md since we're generating it from the template
          git add README.md
          # Commit and force push to ensure README.md is always updated
          git commit -m "Update README with latest starter kits" || echo "No changes to commit"
          git push --force-with-lease origin HEAD:${{ github.ref }}
